<div>
    <button @onclick="@(() => showList = !showList)">@SelectedLocation.Name <span class="oi oi-caret-bottom"></span></button>
    @if(showList)
    {
        <div class="searchbox">
            <input @ref=searchInputElement @bind-value=searchTerm @bind-value:event="oninput" />
            <ul>
            @foreach (var location in locations.Where(loc => string.IsNullOrEmpty(searchTerm) || loc.Name.ToLower().Contains(searchTerm.ToLower())))
            {
                var cls = location == SelectedLocation ? "selected" : "";
                <li class=@cls @onclick="@(() => SetSelectedLocation(location))">@location.Name</li>
            }
            </ul>
        </div>
    }
</div>

@code {
    private bool showList = false;
    private ElementReference searchInputElement;
    private string? searchTerm;
    private Location? selectedLocation;
    public Location? SelectedLocation
    { 
        get => selectedLocation;
        set
        {
            if(selectedLocation == null || value?.Name != selectedLocation.Name)
            {
                selectedLocation = value;
                SelectedLocationChanged.InvokeAsync(selectedLocation);
            }
        }
    }
    [Parameter] public EventCallback<Location> SelectedLocationChanged { get; set; }
    private List<Location>? locations { get; set; }

    private void SetSelectedLocation(Location location)
    {
        SelectedLocation = location;
        searchTerm = null;
        showList = false;
    }
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        locations = new List<Location>
        {
            new Location("Bergen", 60.39299, 5.32415),
            new Location("Olso", 59.91273, 10.74609),
            new Location("Trondheim", 63.43049, 10.39506),
            new Location("Stavanger", 58.97005, 5.73332),
            new Location("Drammen", 59.74389, 10.20449),
            new Location("Fredrikstad", 59.2181, 10.9298),
            new Location("Sandnes", 58.85244, 5.73521),
            new Location("TromsÃ¸", 69.6489, 18.95508)
        }.OrderBy(l => l.Name).ToList();
        SelectedLocation = locations.First();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(showList)
            await searchInputElement.FocusAsync();
    }
}